/* 
 * Apprenda.DeveloperPortal.Web
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CustomPropertiesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CustomPropertiesApiTests
    {
        private CustomPropertiesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CustomPropertiesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CustomPropertiesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CustomPropertiesApi
            //Assert.IsInstanceOfType(typeof(CustomPropertiesApi), instance, "instance is a CustomPropertiesApi");
        }

        
        /// <summary>
        /// Test CustomPropertiesDelete
        /// </summary>
        [Test]
        public void CustomPropertiesDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string alias = null;
            //string subAlias = null;
            //string propertyName = null;
            //instance.CustomPropertiesDelete(alias, subAlias, propertyName);
            
        }
        
        /// <summary>
        /// Test CustomPropertiesDeleteByIdentifier
        /// </summary>
        [Test]
        public void CustomPropertiesDeleteByIdentifierTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string alias = null;
            //string subAlias = null;
            //string identifier = null;
            //string propertyName = null;
            //instance.CustomPropertiesDeleteByIdentifier(alias, subAlias, identifier, propertyName);
            
        }
        
        /// <summary>
        /// Test CustomPropertiesDeleteBySubAlias
        /// </summary>
        [Test]
        public void CustomPropertiesDeleteBySubAliasTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string alias = null;
            //string subAlias = null;
            //string propertyName = null;
            //instance.CustomPropertiesDeleteBySubAlias(alias, subAlias, propertyName);
            
        }
        
        /// <summary>
        /// Test CustomPropertiesGet
        /// </summary>
        [Test]
        public void CustomPropertiesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string alias = null;
            //string subAlias = null;
            //var response = instance.CustomPropertiesGet(alias, subAlias);
            //Assert.IsInstanceOf<List<CustomProperty>> (response, "response is List<CustomProperty>");
        }
        
        /// <summary>
        /// Test CustomPropertiesGetByIdentifier
        /// </summary>
        [Test]
        public void CustomPropertiesGetByIdentifierTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string alias = null;
            //string subAlias = null;
            //string identifier = null;
            //var response = instance.CustomPropertiesGetByIdentifier(alias, subAlias, identifier);
            //Assert.IsInstanceOf<List<CustomProperty>> (response, "response is List<CustomProperty>");
        }
        
        /// <summary>
        /// Test CustomPropertiesGetBySubAlias
        /// </summary>
        [Test]
        public void CustomPropertiesGetBySubAliasTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string alias = null;
            //string subAlias = null;
            //var response = instance.CustomPropertiesGetBySubAlias(alias, subAlias);
            //Assert.IsInstanceOf<List<CustomProperty>> (response, "response is List<CustomProperty>");
        }
        
        /// <summary>
        /// Test CustomPropertiesGetModel
        /// </summary>
        [Test]
        public void CustomPropertiesGetModelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string modelName = null;
            //var response = instance.CustomPropertiesGetModel(modelName);
            //Assert.IsInstanceOf<CustomPropertyModel> (response, "response is CustomPropertyModel");
        }
        
        /// <summary>
        /// Test CustomPropertiesPut
        /// </summary>
        [Test]
        public void CustomPropertiesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string alias = null;
            //string subAlias = null;
            //CustomProperty customProperty = null;
            //instance.CustomPropertiesPut(alias, subAlias, customProperty);
            
        }
        
        /// <summary>
        /// Test CustomPropertiesPutByIdentifier
        /// </summary>
        [Test]
        public void CustomPropertiesPutByIdentifierTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string alias = null;
            //string subAlias = null;
            //string identifier = null;
            //CustomProperty customProperty = null;
            //instance.CustomPropertiesPutByIdentifier(alias, subAlias, identifier, customProperty);
            
        }
        
        /// <summary>
        /// Test CustomPropertiesPutBySubAlias
        /// </summary>
        [Test]
        public void CustomPropertiesPutBySubAliasTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string alias = null;
            //string subAlias = null;
            //CustomProperty customProperty = null;
            //instance.CustomPropertiesPutBySubAlias(alias, subAlias, customProperty);
            
        }
        
    }

}
