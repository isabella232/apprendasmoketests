/* 
 * Apprenda.DeveloperPortal.Web
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing WorkloadsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class WorkloadsApiTests
    {
        private WorkloadsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WorkloadsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WorkloadsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' WorkloadsApi
            //Assert.IsInstanceOfType(typeof(WorkloadsApi), instance, "instance is a WorkloadsApi");
        }

        
        /// <summary>
        /// Test WorkloadsGet
        /// </summary>
        [Test]
        public void WorkloadsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string alias = null;
            //string subAlias = null;
            //var response = instance.WorkloadsGet(alias, subAlias);
            //Assert.IsInstanceOf<List<Workload>> (response, "response is List<Workload>");
        }
        
        /// <summary>
        /// Test WorkloadsGetById
        /// </summary>
        [Test]
        public void WorkloadsGetByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.WorkloadsGetById(id);
            //Assert.IsInstanceOf<Workload> (response, "response is Workload");
        }
        
        /// <summary>
        /// Test WorkloadsGetByIdentifier
        /// </summary>
        [Test]
        public void WorkloadsGetByIdentifierTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string alias = null;
            //string subAlias = null;
            //string identifier = null;
            //var response = instance.WorkloadsGetByIdentifier(alias, subAlias, identifier);
            //Assert.IsInstanceOf<List<Workload>> (response, "response is List<Workload>");
        }
        
        /// <summary>
        /// Test WorkloadsGetBySubAlias
        /// </summary>
        [Test]
        public void WorkloadsGetBySubAliasTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string alias = null;
            //string subAlias = null;
            //var response = instance.WorkloadsGetBySubAlias(alias, subAlias);
            //Assert.IsInstanceOf<List<Workload>> (response, "response is List<Workload>");
        }
        
        /// <summary>
        /// Test WorkloadsPost
        /// </summary>
        [Test]
        public void WorkloadsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //string alias = null;
            //string subAlias = null;
            //string action = null;
            //instance.WorkloadsPost(id, alias, subAlias, action);
            
        }
        
        /// <summary>
        /// Test WorkloadsPostById
        /// </summary>
        [Test]
        public void WorkloadsPostByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //string action = null;
            //instance.WorkloadsPostById(id, action);
            
        }
        
    }

}
