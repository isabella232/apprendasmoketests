/* 
 * Apprenda.DeveloperPortal.Web
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace IO.Swagger.Model
{
    /// <summary>
    /// PlatformLogOverrideDTO
    /// </summary>
    [DataContract]
    public partial class PlatformLogOverrideDTO :  IEquatable<PlatformLogOverrideDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PlatformLogOverrideDTO" /> class.
        /// </summary>
        /// <param name="AppAlias">AppAlias.</param>
        /// <param name="AppVersion">AppVersion.</param>
        /// <param name="DevTeamAlias">DevTeamAlias.</param>
        /// <param name="User">User.</param>
        /// <param name="Tenant">Tenant.</param>
        /// <param name="LogOverride">LogOverride.</param>
        public PlatformLogOverrideDTO(string AppAlias = default(string), string AppVersion = default(string), string DevTeamAlias = default(string), OverrideUserInfoDTO User = default(OverrideUserInfoDTO), OverrideTenantInfoDTO Tenant = default(OverrideTenantInfoDTO), LogOverrideDTO LogOverride = default(LogOverrideDTO))
        {
            this.AppAlias = AppAlias;
            this.AppVersion = AppVersion;
            this.DevTeamAlias = DevTeamAlias;
            this.User = User;
            this.Tenant = Tenant;
            this.LogOverride = LogOverride;
        }
        
        /// <summary>
        /// Gets or Sets AppAlias
        /// </summary>
        [DataMember(Name="appAlias", EmitDefaultValue=false)]
        public string AppAlias { get; set; }
        /// <summary>
        /// Gets or Sets AppVersion
        /// </summary>
        [DataMember(Name="appVersion", EmitDefaultValue=false)]
        public string AppVersion { get; set; }
        /// <summary>
        /// Gets or Sets DevTeamAlias
        /// </summary>
        [DataMember(Name="devTeamAlias", EmitDefaultValue=false)]
        public string DevTeamAlias { get; set; }
        /// <summary>
        /// Gets or Sets User
        /// </summary>
        [DataMember(Name="user", EmitDefaultValue=false)]
        public OverrideUserInfoDTO User { get; set; }
        /// <summary>
        /// Gets or Sets Tenant
        /// </summary>
        [DataMember(Name="tenant", EmitDefaultValue=false)]
        public OverrideTenantInfoDTO Tenant { get; set; }
        /// <summary>
        /// Gets or Sets LogOverride
        /// </summary>
        [DataMember(Name="logOverride", EmitDefaultValue=false)]
        public LogOverrideDTO LogOverride { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PlatformLogOverrideDTO {\n");
            sb.Append("  AppAlias: ").Append(AppAlias).Append("\n");
            sb.Append("  AppVersion: ").Append(AppVersion).Append("\n");
            sb.Append("  DevTeamAlias: ").Append(DevTeamAlias).Append("\n");
            sb.Append("  User: ").Append(User).Append("\n");
            sb.Append("  Tenant: ").Append(Tenant).Append("\n");
            sb.Append("  LogOverride: ").Append(LogOverride).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as PlatformLogOverrideDTO);
        }

        /// <summary>
        /// Returns true if PlatformLogOverrideDTO instances are equal
        /// </summary>
        /// <param name="other">Instance of PlatformLogOverrideDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PlatformLogOverrideDTO other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.AppAlias == other.AppAlias ||
                    this.AppAlias != null &&
                    this.AppAlias.Equals(other.AppAlias)
                ) && 
                (
                    this.AppVersion == other.AppVersion ||
                    this.AppVersion != null &&
                    this.AppVersion.Equals(other.AppVersion)
                ) && 
                (
                    this.DevTeamAlias == other.DevTeamAlias ||
                    this.DevTeamAlias != null &&
                    this.DevTeamAlias.Equals(other.DevTeamAlias)
                ) && 
                (
                    this.User == other.User ||
                    this.User != null &&
                    this.User.Equals(other.User)
                ) && 
                (
                    this.Tenant == other.Tenant ||
                    this.Tenant != null &&
                    this.Tenant.Equals(other.Tenant)
                ) && 
                (
                    this.LogOverride == other.LogOverride ||
                    this.LogOverride != null &&
                    this.LogOverride.Equals(other.LogOverride)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.AppAlias != null)
                    hash = hash * 59 + this.AppAlias.GetHashCode();
                if (this.AppVersion != null)
                    hash = hash * 59 + this.AppVersion.GetHashCode();
                if (this.DevTeamAlias != null)
                    hash = hash * 59 + this.DevTeamAlias.GetHashCode();
                if (this.User != null)
                    hash = hash * 59 + this.User.GetHashCode();
                if (this.Tenant != null)
                    hash = hash * 59 + this.Tenant.GetHashCode();
                if (this.LogOverride != null)
                    hash = hash * 59 + this.LogOverride.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
