/* 
 * Apprenda.DeveloperPortal.Web
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Apiv1ComponentsMonitoringConnectionDetails
    /// </summary>
    [DataContract]
    public partial class Apiv1ComponentsMonitoringConnectionDetails :  IEquatable<Apiv1ComponentsMonitoringConnectionDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Apiv1ComponentsMonitoringConnectionDetails" /> class.
        /// </summary>
        /// <param name="ConnectionType">ConnectionType.</param>
        /// <param name="ConnectionInfo">ConnectionInfo.</param>
        public Apiv1ComponentsMonitoringConnectionDetails(string ConnectionType = default(string), string ConnectionInfo = default(string))
        {
            this.ConnectionType = ConnectionType;
            this.ConnectionInfo = ConnectionInfo;
        }
        
        /// <summary>
        /// Gets or Sets ConnectionType
        /// </summary>
        [DataMember(Name="connectionType", EmitDefaultValue=false)]
        public string ConnectionType { get; set; }
        /// <summary>
        /// Gets or Sets ConnectionInfo
        /// </summary>
        [DataMember(Name="connectionInfo", EmitDefaultValue=false)]
        public string ConnectionInfo { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Apiv1ComponentsMonitoringConnectionDetails {\n");
            sb.Append("  ConnectionType: ").Append(ConnectionType).Append("\n");
            sb.Append("  ConnectionInfo: ").Append(ConnectionInfo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as Apiv1ComponentsMonitoringConnectionDetails);
        }

        /// <summary>
        /// Returns true if Apiv1ComponentsMonitoringConnectionDetails instances are equal
        /// </summary>
        /// <param name="other">Instance of Apiv1ComponentsMonitoringConnectionDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Apiv1ComponentsMonitoringConnectionDetails other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.ConnectionType == other.ConnectionType ||
                    this.ConnectionType != null &&
                    this.ConnectionType.Equals(other.ConnectionType)
                ) && 
                (
                    this.ConnectionInfo == other.ConnectionInfo ||
                    this.ConnectionInfo != null &&
                    this.ConnectionInfo.Equals(other.ConnectionInfo)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.ConnectionType != null)
                    hash = hash * 59 + this.ConnectionType.GetHashCode();
                if (this.ConnectionInfo != null)
                    hash = hash * 59 + this.ConnectionInfo.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
