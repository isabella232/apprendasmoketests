/* 
 * Apprenda.DeveloperPortal.Web
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Apiv1WorkloadsJmxConnection
    /// </summary>
    [DataContract]
    public partial class Apiv1WorkloadsJmxConnection :  IEquatable<Apiv1WorkloadsJmxConnection>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Apiv1WorkloadsJmxConnection" /> class.
        /// </summary>
        /// <param name="Host">Host.</param>
        /// <param name="ConnectionUrl">ConnectionUrl.</param>
        /// <param name="User">User.</param>
        /// <param name="Password">Password.</param>
        public Apiv1WorkloadsJmxConnection(string Host = default(string), string ConnectionUrl = default(string), string User = default(string), string Password = default(string))
        {
            this.Host = Host;
            this.ConnectionUrl = ConnectionUrl;
            this.User = User;
            this.Password = Password;
        }
        
        /// <summary>
        /// Gets or Sets Host
        /// </summary>
        [DataMember(Name="host", EmitDefaultValue=false)]
        public string Host { get; set; }
        /// <summary>
        /// Gets or Sets ConnectionUrl
        /// </summary>
        [DataMember(Name="connectionUrl", EmitDefaultValue=false)]
        public string ConnectionUrl { get; set; }
        /// <summary>
        /// Gets or Sets User
        /// </summary>
        [DataMember(Name="user", EmitDefaultValue=false)]
        public string User { get; set; }
        /// <summary>
        /// Gets or Sets Password
        /// </summary>
        [DataMember(Name="password", EmitDefaultValue=false)]
        public string Password { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Apiv1WorkloadsJmxConnection {\n");
            sb.Append("  Host: ").Append(Host).Append("\n");
            sb.Append("  ConnectionUrl: ").Append(ConnectionUrl).Append("\n");
            sb.Append("  User: ").Append(User).Append("\n");
            sb.Append("  Password: ").Append(Password).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as Apiv1WorkloadsJmxConnection);
        }

        /// <summary>
        /// Returns true if Apiv1WorkloadsJmxConnection instances are equal
        /// </summary>
        /// <param name="other">Instance of Apiv1WorkloadsJmxConnection to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Apiv1WorkloadsJmxConnection other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Host == other.Host ||
                    this.Host != null &&
                    this.Host.Equals(other.Host)
                ) && 
                (
                    this.ConnectionUrl == other.ConnectionUrl ||
                    this.ConnectionUrl != null &&
                    this.ConnectionUrl.Equals(other.ConnectionUrl)
                ) && 
                (
                    this.User == other.User ||
                    this.User != null &&
                    this.User.Equals(other.User)
                ) && 
                (
                    this.Password == other.Password ||
                    this.Password != null &&
                    this.Password.Equals(other.Password)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Host != null)
                    hash = hash * 59 + this.Host.GetHashCode();
                if (this.ConnectionUrl != null)
                    hash = hash * 59 + this.ConnectionUrl.GetHashCode();
                if (this.User != null)
                    hash = hash * 59 + this.User.GetHashCode();
                if (this.Password != null)
                    hash = hash * 59 + this.Password.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
