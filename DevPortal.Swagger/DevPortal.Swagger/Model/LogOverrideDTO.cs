/* 
 * Apprenda.DeveloperPortal.Web
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace IO.Swagger.Model
{
    /// <summary>
    /// LogOverrideDTO
    /// </summary>
    [DataContract]
    public partial class LogOverrideDTO :  IEquatable<LogOverrideDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LogOverrideDTO" /> class.
        /// </summary>
        /// <param name="Id">Id.</param>
        /// <param name="LogLevel">LogLevel.</param>
        /// <param name="VersionId">VersionId.</param>
        /// <param name="AggregateRepeatedLogs">AggregateRepeatedLogs.</param>
        /// <param name="RepeatedLogNotificationFrequency">RepeatedLogNotificationFrequency.</param>
        /// <param name="OverrideEmailRecipients">OverrideEmailRecipients.</param>
        public LogOverrideDTO(Guid? Id = default(Guid?), int? LogLevel = default(int?), Guid? VersionId = default(Guid?), bool? AggregateRepeatedLogs = default(bool?), int? RepeatedLogNotificationFrequency = default(int?), List<Apiv1LogOverridesLogOverrideOverrideEmailRecipients> OverrideEmailRecipients = default(List<Apiv1LogOverridesLogOverrideOverrideEmailRecipients>))
        {
            this.Id = Id;
            this.LogLevel = LogLevel;
            this.VersionId = VersionId;
            this.AggregateRepeatedLogs = AggregateRepeatedLogs;
            this.RepeatedLogNotificationFrequency = RepeatedLogNotificationFrequency;
            this.OverrideEmailRecipients = OverrideEmailRecipients;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid? Id { get; set; }
        /// <summary>
        /// Gets or Sets LogLevel
        /// </summary>
        [DataMember(Name="logLevel", EmitDefaultValue=false)]
        public int? LogLevel { get; set; }
        /// <summary>
        /// Gets or Sets VersionId
        /// </summary>
        [DataMember(Name="versionId", EmitDefaultValue=false)]
        public Guid? VersionId { get; set; }
        /// <summary>
        /// Gets or Sets AggregateRepeatedLogs
        /// </summary>
        [DataMember(Name="aggregateRepeatedLogs", EmitDefaultValue=false)]
        public bool? AggregateRepeatedLogs { get; set; }
        /// <summary>
        /// Gets or Sets RepeatedLogNotificationFrequency
        /// </summary>
        [DataMember(Name="repeatedLogNotificationFrequency", EmitDefaultValue=false)]
        public int? RepeatedLogNotificationFrequency { get; set; }
        /// <summary>
        /// Gets or Sets OverrideEmailRecipients
        /// </summary>
        [DataMember(Name="overrideEmailRecipients", EmitDefaultValue=false)]
        public List<Apiv1LogOverridesLogOverrideOverrideEmailRecipients> OverrideEmailRecipients { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LogOverrideDTO {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  LogLevel: ").Append(LogLevel).Append("\n");
            sb.Append("  VersionId: ").Append(VersionId).Append("\n");
            sb.Append("  AggregateRepeatedLogs: ").Append(AggregateRepeatedLogs).Append("\n");
            sb.Append("  RepeatedLogNotificationFrequency: ").Append(RepeatedLogNotificationFrequency).Append("\n");
            sb.Append("  OverrideEmailRecipients: ").Append(OverrideEmailRecipients).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as LogOverrideDTO);
        }

        /// <summary>
        /// Returns true if LogOverrideDTO instances are equal
        /// </summary>
        /// <param name="other">Instance of LogOverrideDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LogOverrideDTO other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Id == other.Id ||
                    this.Id != null &&
                    this.Id.Equals(other.Id)
                ) && 
                (
                    this.LogLevel == other.LogLevel ||
                    this.LogLevel != null &&
                    this.LogLevel.Equals(other.LogLevel)
                ) && 
                (
                    this.VersionId == other.VersionId ||
                    this.VersionId != null &&
                    this.VersionId.Equals(other.VersionId)
                ) && 
                (
                    this.AggregateRepeatedLogs == other.AggregateRepeatedLogs ||
                    this.AggregateRepeatedLogs != null &&
                    this.AggregateRepeatedLogs.Equals(other.AggregateRepeatedLogs)
                ) && 
                (
                    this.RepeatedLogNotificationFrequency == other.RepeatedLogNotificationFrequency ||
                    this.RepeatedLogNotificationFrequency != null &&
                    this.RepeatedLogNotificationFrequency.Equals(other.RepeatedLogNotificationFrequency)
                ) && 
                (
                    this.OverrideEmailRecipients == other.OverrideEmailRecipients ||
                    this.OverrideEmailRecipients != null &&
                    this.OverrideEmailRecipients.SequenceEqual(other.OverrideEmailRecipients)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Id != null)
                    hash = hash * 59 + this.Id.GetHashCode();
                if (this.LogLevel != null)
                    hash = hash * 59 + this.LogLevel.GetHashCode();
                if (this.VersionId != null)
                    hash = hash * 59 + this.VersionId.GetHashCode();
                if (this.AggregateRepeatedLogs != null)
                    hash = hash * 59 + this.AggregateRepeatedLogs.GetHashCode();
                if (this.RepeatedLogNotificationFrequency != null)
                    hash = hash * 59 + this.RepeatedLogNotificationFrequency.GetHashCode();
                if (this.OverrideEmailRecipients != null)
                    hash = hash * 59 + this.OverrideEmailRecipients.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
