/* 
 * Apprenda.DeveloperPortal.Web
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace IO.Swagger.Model
{
    /// <summary>
    /// InlineResponse20010
    /// </summary>
    [DataContract]
    public partial class InlineResponse20010 :  IEquatable<InlineResponse20010>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse20010" /> class.
        /// </summary>
        /// <param name="TenantSelectionPageUrl">TenantSelectionPageUrl.</param>
        /// <param name="UserHasMultipleEntitlements">UserHasMultipleEntitlements.</param>
        /// <param name="Href">Href.</param>
        public InlineResponse20010(string TenantSelectionPageUrl = default(string), bool? UserHasMultipleEntitlements = default(bool?), string Href = default(string))
        {
            this.TenantSelectionPageUrl = TenantSelectionPageUrl;
            this.UserHasMultipleEntitlements = UserHasMultipleEntitlements;
            this.Href = Href;
        }
        
        /// <summary>
        /// Gets or Sets TenantSelectionPageUrl
        /// </summary>
        [DataMember(Name="tenantSelectionPageUrl", EmitDefaultValue=false)]
        public string TenantSelectionPageUrl { get; set; }
        /// <summary>
        /// Gets or Sets UserHasMultipleEntitlements
        /// </summary>
        [DataMember(Name="userHasMultipleEntitlements", EmitDefaultValue=false)]
        public bool? UserHasMultipleEntitlements { get; set; }
        /// <summary>
        /// Gets or Sets User
        /// </summary>
        [DataMember(Name="user", EmitDefaultValue=false)]
        public string User { get; private set; }
        /// <summary>
        /// Gets or Sets UserEmail
        /// </summary>
        [DataMember(Name="userEmail", EmitDefaultValue=false)]
        public string UserEmail { get; private set; }
        /// <summary>
        /// Gets or Sets TenantAlias
        /// </summary>
        [DataMember(Name="tenantAlias", EmitDefaultValue=false)]
        public string TenantAlias { get; private set; }
        /// <summary>
        /// Gets or Sets Href
        /// </summary>
        [DataMember(Name="href", EmitDefaultValue=false)]
        public string Href { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse20010 {\n");
            sb.Append("  TenantSelectionPageUrl: ").Append(TenantSelectionPageUrl).Append("\n");
            sb.Append("  UserHasMultipleEntitlements: ").Append(UserHasMultipleEntitlements).Append("\n");
            sb.Append("  User: ").Append(User).Append("\n");
            sb.Append("  UserEmail: ").Append(UserEmail).Append("\n");
            sb.Append("  TenantAlias: ").Append(TenantAlias).Append("\n");
            sb.Append("  Href: ").Append(Href).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as InlineResponse20010);
        }

        /// <summary>
        /// Returns true if InlineResponse20010 instances are equal
        /// </summary>
        /// <param name="other">Instance of InlineResponse20010 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse20010 other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.TenantSelectionPageUrl == other.TenantSelectionPageUrl ||
                    this.TenantSelectionPageUrl != null &&
                    this.TenantSelectionPageUrl.Equals(other.TenantSelectionPageUrl)
                ) && 
                (
                    this.UserHasMultipleEntitlements == other.UserHasMultipleEntitlements ||
                    this.UserHasMultipleEntitlements != null &&
                    this.UserHasMultipleEntitlements.Equals(other.UserHasMultipleEntitlements)
                ) && 
                (
                    this.User == other.User ||
                    this.User != null &&
                    this.User.Equals(other.User)
                ) && 
                (
                    this.UserEmail == other.UserEmail ||
                    this.UserEmail != null &&
                    this.UserEmail.Equals(other.UserEmail)
                ) && 
                (
                    this.TenantAlias == other.TenantAlias ||
                    this.TenantAlias != null &&
                    this.TenantAlias.Equals(other.TenantAlias)
                ) && 
                (
                    this.Href == other.Href ||
                    this.Href != null &&
                    this.Href.Equals(other.Href)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.TenantSelectionPageUrl != null)
                    hash = hash * 59 + this.TenantSelectionPageUrl.GetHashCode();
                if (this.UserHasMultipleEntitlements != null)
                    hash = hash * 59 + this.UserHasMultipleEntitlements.GetHashCode();
                if (this.User != null)
                    hash = hash * 59 + this.User.GetHashCode();
                if (this.UserEmail != null)
                    hash = hash * 59 + this.UserEmail.GetHashCode();
                if (this.TenantAlias != null)
                    hash = hash * 59 + this.TenantAlias.GetHashCode();
                if (this.Href != null)
                    hash = hash * 59 + this.Href.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
