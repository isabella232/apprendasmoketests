/* 
 * Apprenda.DeveloperPortal.Web
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace IO.Swagger.Model
{
    /// <summary>
    /// InlineResponse200
    /// </summary>
    [DataContract]
    public partial class InlineResponse200 :  IEquatable<InlineResponse200>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse200" /> class.
        /// </summary>
        /// <param name="AvailableAddOns">AvailableAddOns.</param>
        /// <param name="DeployedAddOns">DeployedAddOns.</param>
        /// <param name="Href">Href.</param>
        public InlineResponse200(List<InlineResponse200AvailableAddOns> AvailableAddOns = default(List<InlineResponse200AvailableAddOns>), List<InlineResponse200DeployedAddOns> DeployedAddOns = default(List<InlineResponse200DeployedAddOns>), string Href = default(string))
        {
            this.AvailableAddOns = AvailableAddOns;
            this.DeployedAddOns = DeployedAddOns;
            this.Href = Href;
        }
        
        /// <summary>
        /// Gets or Sets AvailableAddOns
        /// </summary>
        [DataMember(Name="availableAddOns", EmitDefaultValue=false)]
        public List<InlineResponse200AvailableAddOns> AvailableAddOns { get; set; }
        /// <summary>
        /// Gets or Sets DeployedAddOns
        /// </summary>
        [DataMember(Name="deployedAddOns", EmitDefaultValue=false)]
        public List<InlineResponse200DeployedAddOns> DeployedAddOns { get; set; }
        /// <summary>
        /// Gets or Sets Href
        /// </summary>
        [DataMember(Name="href", EmitDefaultValue=false)]
        public string Href { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse200 {\n");
            sb.Append("  AvailableAddOns: ").Append(AvailableAddOns).Append("\n");
            sb.Append("  DeployedAddOns: ").Append(DeployedAddOns).Append("\n");
            sb.Append("  Href: ").Append(Href).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as InlineResponse200);
        }

        /// <summary>
        /// Returns true if InlineResponse200 instances are equal
        /// </summary>
        /// <param name="other">Instance of InlineResponse200 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse200 other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.AvailableAddOns == other.AvailableAddOns ||
                    this.AvailableAddOns != null &&
                    this.AvailableAddOns.SequenceEqual(other.AvailableAddOns)
                ) && 
                (
                    this.DeployedAddOns == other.DeployedAddOns ||
                    this.DeployedAddOns != null &&
                    this.DeployedAddOns.SequenceEqual(other.DeployedAddOns)
                ) && 
                (
                    this.Href == other.Href ||
                    this.Href != null &&
                    this.Href.Equals(other.Href)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.AvailableAddOns != null)
                    hash = hash * 59 + this.AvailableAddOns.GetHashCode();
                if (this.DeployedAddOns != null)
                    hash = hash * 59 + this.DeployedAddOns.GetHashCode();
                if (this.Href != null)
                    hash = hash * 59 + this.Href.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
